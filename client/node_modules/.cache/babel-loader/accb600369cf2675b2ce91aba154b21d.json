{"ast":null,"code":"var _jsxFileName = \"/media/karim/Data_SSD/Systeme_de_presence/client/src/page/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Navigation from \"../components/Navigation\";\nimport { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/Contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast(\"Message envoyé merci :)\", {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success\",\n      toastId: \"notifyToast\"\n    });\n  };\n\n  const onSubmit = async data => {\n    const {\n      name,\n      company,\n      phone,\n      email,\n      message\n    } = data;\n\n    try {\n      const templateParams = {\n        name,\n        company,\n        phone,\n        email,\n        message\n      };\n      await emailjs.send(\"service_8jfey5c\", \"template_x2codz4\", templateParams, \"user_qsFcQKdL6YUJz04gFklzJ\");\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contactBox\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"orm-content\",\n              onSubmit: handleSubmit(onSubmit),\n              noValidate: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Contactez-moi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  ...register(\"name\", {\n                    required: {\n                      value: true,\n                      message: \"veuillez saisir votre nom\"\n                    },\n                    maxLength: {\n                      value: 30,\n                      message: \"Veuillez utiliser 30 caractères ou moins\"\n                    }\n                  }),\n                  placeholder: \"Nom *\",\n                  autoComplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"errorMessage\",\n                  children: errors.name.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"company\",\n                  ...register(\"company\", {\n                    required: {\n                      value: true,\n                      message: \"veuillez saisir le nom de société\"\n                    },\n                    maxLength: {\n                      value: 30,\n                      message: \"Veuillez utiliser 30 caractères ou moins\"\n                    }\n                  }),\n                  placeholder: \"Soci\\xE9t\\xE9 *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), errors.company && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"errorMessage\",\n                  children: [\"\\xA0\", errors.company.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"phone\",\n                  ...register(\"phone\", {\n                    required: {\n                      value: true,\n                      message: \"Veuillez saisir un numéro Téléphone\",\n                      pattern: /^[0-0]{1}-[0-9]{3}-[0-9]{2}[0-9]{2}$/\n                    },\n                    maxLength: {\n                      value: 12,\n                      message: \"Veuillez utiliser 12 numéro ou moins\"\n                    }\n                  }),\n                  placeholder: \"T\\xE9l\\xE9phone *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"errorMessage\",\n                  children: errors.phone.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  column: 2,\n                  type: \"email\",\n                  name: \"email\",\n                  ...register(\"email\", {\n                    required: true,\n                    pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                  }),\n                  placeholder: \"Adresse email *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"errorMessage\",\n                  children: \"Veuillez saisir une adresse e-mail valide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: 3,\n                  name: \"message\",\n                  ...register(\"message\", {\n                    required: true\n                  }),\n                  placeholder: \"Message *\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"errorMessage\",\n                  children: \"Veuillez saisir un message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"button\",\n                  type: \"submit\",\n                  value: \"Envoyer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"J7FjpSbFdr4cqr5Ot+Y1m84v8C8=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\n\nfunction Contact_() {\n  return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Contact_;\nexport default Contact_;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contact\");\n$RefreshReg$(_c2, \"Contact_\");","map":{"version":3,"sources":["/media/karim/Data_SSD/Systeme_de_presence/client/src/page/Contact.js"],"names":["React","Navigation","useForm","emailjs","ToastContainer","toast","Contact","register","handleSubmit","reset","formState","errors","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","name","company","phone","email","message","templateParams","send","e","console","log","required","value","maxLength","pattern","Contact_"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navigation from \"../components/Navigation\";\n\nimport { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/Contact.css\";\n\nconst Contact = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const toastifySuccess = () => {\n    toast(\"Message envoyé merci :)\", {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success\",\n      toastId: \"notifyToast\",\n    });\n  };\n\n  const onSubmit = async (data) => {\n    const { name, company, phone, email, message } = data;\n    try {\n      const templateParams = {\n        name,\n        company,\n        phone,\n        email,\n        message,\n      };\n\n      await emailjs.send(\n        \"service_8jfey5c\",\n        \"template_x2codz4\",\n        templateParams,\n        \"user_qsFcQKdL6YUJz04gFklzJ\"\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"contact\">\n        <Navigation />\n        <div className=\"contactContent\">\n          <div className=\"header\">\n            <div className=\"contactBox\">\n              <form\n                id=\"orm-content\"\n                onSubmit={handleSubmit(onSubmit)}\n                noValidate>\n                <div className=\"contact-form\">\n                  <h2>Contactez-moi</h2>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    {...register(\"name\", {\n                      required: {\n                        value: true,\n                        message: \"veuillez saisir votre nom\",\n                      },\n                      maxLength: {\n                        value: 30,\n                        message: \"Veuillez utiliser 30 caractères ou moins\",\n                      },\n                    })}\n                    placeholder=\"Nom *\"\n                    autoComplete=\"off\"></input>\n                  {errors.name && (\n                    <span className=\"errorMessage\">{errors.name.message}</span>\n                  )}\n                  <input\n                    type=\"text\"\n                    name=\"company\"\n                    {...register(\"company\", {\n                      required: {\n                        value: true,\n                        message: \"veuillez saisir le nom de société\",\n                      },\n                      maxLength: {\n                        value: 30,\n                        message: \"Veuillez utiliser 30 caractères ou moins\",\n                      },\n                    })}\n                    placeholder=\"Société *\"></input>\n                  {errors.company && (\n                    <span className=\"errorMessage\">\n                      &nbsp;{errors.company.message}\n                    </span>\n                  )}\n                  <input\n                    type=\"number\"\n                    name=\"phone\"\n                    {...register(\"phone\", {\n                      required: {\n                        value: true,\n                        message: \"Veuillez saisir un numéro Téléphone\",\n                        pattern: /^[0-0]{1}-[0-9]{3}-[0-9]{2}[0-9]{2}$/,\n                      },\n                      maxLength: {\n                        value: 12,\n                        message: \"Veuillez utiliser 12 numéro ou moins\",\n                      },\n                    })}\n                    placeholder=\"Téléphone *\"></input>\n                  {errors.phone && (\n                    <span className=\"errorMessage\">{errors.phone.message}</span>\n                  )}\n                  <input\n                    column={2}\n                    type=\"email\"\n                    name=\"email\"\n                    {...register(\"email\", {\n                      required: true,\n                      pattern:\n                        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                    })}\n                    placeholder=\"Adresse email *\"></input>\n                  {errors.email && (\n                    <span className=\"errorMessage\">\n                      Veuillez saisir une adresse e-mail valide\n                    </span>\n                  )}\n                  <textarea\n                    rows={3}\n                    name=\"message\"\n                    {...register(\"message\", {\n                      required: true,\n                    })}\n                    placeholder=\"Message *\"></textarea>\n                  {errors.message && (\n                    <span className=\"errorMessage\">\n                      Veuillez saisir un message\n                    </span>\n                  )}\n                  <input className=\"button\" type=\"submit\" value=\"Envoyer\" />\n                </div>\n                <ToastContainer />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction Contact_() {\n  return <Contact />;\n}\n\nexport default Contact_;\n"]},"metadata":{},"sourceType":"module"}