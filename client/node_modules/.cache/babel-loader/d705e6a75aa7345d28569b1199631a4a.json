{"ast":null,"code":"var _jsxFileName = \"/media/karim/Data_SSD/Systeme_de_presence/client/src/page/Contact.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/Contact.css\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast(\"Message envoyé merci :)\", {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success\",\n      toastId: \"notifyToast\"\n    });\n  };\n\n  const onSubmit = async data => {\n    const {\n      name,\n      company,\n      phone,\n      email,\n      message\n    } = data;\n\n    try {\n      const templateParams = {\n        name,\n        company,\n        phone,\n        email,\n        message\n      };\n      await emailjs.send(\"service_8jfey5c\", \"template_x2codz4\", templateParams, \"user_qsFcQKdL6YUJz04gFklzJ\");\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"orm-content\",\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contactez-moi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          ...register(\"name\", {\n            required: {\n              value: true,\n              message: \"veuillez saisir votre nom\"\n            },\n            maxLength: {\n              value: 30,\n              message: \"Veuillez utiliser 30 caractères ou moins\"\n            }\n          }),\n          placeholder: \"Nom *\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorMessage\",\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"company\",\n          ...register(\"company\", {\n            required: {\n              value: true,\n              message: \"veuillez saisir le nom de société\"\n            },\n            maxLength: {\n              value: 30,\n              message: \"Veuillez utiliser 30 caractères ou moins\"\n            }\n          }),\n          placeholder: \"Soci\\xE9t\\xE9 *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), errors.company && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorMessage\",\n          children: [\"\\xA0\", errors.company.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"phone\",\n          ...register(\"phone\", {\n            required: {\n              value: true,\n              message: \"Veuillez saisir un numéro Téléphone\",\n              pattern: /^[0-0]{1}-[0-9]{3}-[0-9]{2}[0-9]{2}$/\n            },\n            maxLength: {\n              value: 12,\n              message: \"Veuillez utiliser 12 numéro ou moins\"\n            }\n          }),\n          placeholder: \"T\\xE9l\\xE9phone *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorMessage\",\n          children: errors.phone.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          column: 2,\n          type: \"email\",\n          name: \"email\",\n          ...register(\"email\", {\n            required: true,\n            pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n          }),\n          placeholder: \"Adresse email *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorMessage\",\n          children: \"Veuillez saisir une adresse e-mail valide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 3,\n          name: \"message\",\n          ...register(\"message\", {\n            required: true\n          }),\n          placeholder: \"Message *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorMessage\",\n          children: \"Veuillez saisir un message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"J7FjpSbFdr4cqr5Ot+Y1m84v8C8=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/media/karim/Data_SSD/Systeme_de_presence/client/src/page/Contact.js"],"names":["useForm","emailjs","ToastContainer","toast","Navbar","Contact","register","handleSubmit","reset","formState","errors","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","name","company","phone","email","message","templateParams","send","e","console","log","required","value","maxLength","pattern"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"../styles/Contact.css\";\nimport Navbar from \"../components/Navbar\";\n\nconst Contact = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const toastifySuccess = () => {\n    toast(\"Message envoyé merci :)\", {\n      position: \"top-center\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success\",\n      toastId: \"notifyToast\",\n    });\n  };\n\n  const onSubmit = async (data) => {\n    const { name, company, phone, email, message } = data;\n    try {\n      const templateParams = {\n        name,\n        company,\n        phone,\n        email,\n        message,\n      };\n\n      await emailjs.send(\n        \"service_8jfey5c\",\n        \"template_x2codz4\",\n        templateParams,\n        \"user_qsFcQKdL6YUJz04gFklzJ\"\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div>\n      <form id=\"orm-content\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <div className=\"contact-form\">\n          <h2>Contactez-moi</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            {...register(\"name\", {\n              required: { value: true, message: \"veuillez saisir votre nom\" },\n              maxLength: {\n                value: 30,\n                message: \"Veuillez utiliser 30 caractères ou moins\",\n              },\n            })}\n            placeholder=\"Nom *\"\n            autoComplete=\"off\"></input>\n          {errors.name && (\n            <span className=\"errorMessage\">{errors.name.message}</span>\n          )}\n          <input\n            type=\"text\"\n            name=\"company\"\n            {...register(\"company\", {\n              required: {\n                value: true,\n                message: \"veuillez saisir le nom de société\",\n              },\n              maxLength: {\n                value: 30,\n                message: \"Veuillez utiliser 30 caractères ou moins\",\n              },\n            })}\n            placeholder=\"Société *\"></input>\n          {errors.company && (\n            <span className=\"errorMessage\">&nbsp;{errors.company.message}</span>\n          )}\n          <input\n            type=\"number\"\n            name=\"phone\"\n            {...register(\"phone\", {\n              required: {\n                value: true,\n                message: \"Veuillez saisir un numéro Téléphone\",\n                pattern: /^[0-0]{1}-[0-9]{3}-[0-9]{2}[0-9]{2}$/,\n              },\n              maxLength: {\n                value: 12,\n                message: \"Veuillez utiliser 12 numéro ou moins\",\n              },\n            })}\n            placeholder=\"Téléphone *\"></input>\n          {errors.phone && (\n            <span className=\"errorMessage\">{errors.phone.message}</span>\n          )}\n          <input\n            column={2}\n            type=\"email\"\n            name=\"email\"\n            {...register(\"email\", {\n              required: true,\n              pattern:\n                /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n            })}\n            placeholder=\"Adresse email *\"></input>\n          {errors.email && (\n            <span className=\"errorMessage\">\n              Veuillez saisir une adresse e-mail valide\n            </span>\n          )}\n          <textarea\n            rows={3}\n            name=\"message\"\n            {...register(\"message\", {\n              required: true,\n            })}\n            placeholder=\"Message *\"></textarea>\n          {errors.message && (\n            <span className=\"errorMessage\">Veuillez saisir un message</span>\n          )}\n          <input className=\"button\" type=\"submit\" value=\"Envoyer\" />\n        </div>\n        <ToastContainer />\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}